# Build stage
FROM node:22-alpine AS build

WORKDIR /app

# Copy package.json, package-lock.json, and Jest configuration
COPY package*.json jest.config.js ./

# Install all dependencies including dev dependencies
RUN npm ci && \
    npm cache clean --force

# Test stage - using Alpine with Node installed
FROM alpine

# Install Node.js and npm (needed for tests)
RUN apk add --no-cache \
    nodejs=~22 \
    npm \
    --repository=https://dl-cdn.alpinelinux.org/alpine/edge/community

WORKDIR /app

# Copy dependencies from build stage
COPY --from=build /app/node_modules /app/node_modules

# Copy source code and tests
# Explicitly include files that might be excluded by .dockerignore
COPY ./jest.config.js ./index.js ./utils.js ./answerMap.json ./package.json ./
COPY ./tests ./tests

# Run tests with coverage
CMD ["npm", "run", "test:coverage"]